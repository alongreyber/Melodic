!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
AddHeaders	/home/alon/melodic/backend/routes.go	/^func (app App) AddHeaders(next http.Handler) http.Handler {$/;"	f	language:Go
App	/home/alon/melodic/backend/index.go	/^type App struct {$/;"	t	language:Go
Claims	/home/alon/melodic/backend/routes.go	/^type Claims struct {$/;"	t	language:Go
errorResponse	/home/alon/melodic/backend/routes.go	/^func errorResponse(w http.ResponseWriter, err string, status int) {$/;"	f	language:Go
GetUserHandler	/home/alon/melodic/backend/routes.go	/^func (app App) GetUserHandler(w http.ResponseWriter, r *http.Request) {$/;"	f	language:Go
JwtAuthentication	/home/alon/melodic/backend/routes.go	/^func (app App) JwtAuthentication(next http.Handler) http.Handler {$/;"	f	language:Go
jwtKey	/home/alon/melodic/backend/routes.go	/^var jwtKey = []byte("my_secret_key")$/;"	v	language:Go
main	/home/alon/melodic/backend/index.go	/^func main() {$/;"	f	language:Go
main	/home/alon/melodic/backend/index.go	/^package main$/;"	p	language:Go
main	/home/alon/melodic/backend/routes.go	/^package main$/;"	p	language:Go
okResponse	/home/alon/melodic/backend/routes.go	/^func okResponse(w http.ResponseWriter, data interface{}) {$/;"	f	language:Go
RefreshHandler	/home/alon/melodic/backend/routes.go	/^func (app App) RefreshHandler(w http.ResponseWriter, r *http.Request) {$/;"	f	language:Go
SpotifyAuthCode	/home/alon/melodic/backend/routes.go	/^type SpotifyAuthCode struct {$/;"	t	language:Go
SpotifyLoginHandler	/home/alon/melodic/backend/routes.go	/^func (app App) SpotifyLoginHandler(w http.ResponseWriter, r *http.Request) {$/;"	f	language:Go
